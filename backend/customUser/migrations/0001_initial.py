# Generated by Django 5.2.3 on 2025-07-24 10:26

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(blank=True, max_length=128, null=True)),
                ("first_name", models.CharField(blank=True, max_length=30, null=True)),
                ("last_name", models.CharField(blank=True, max_length=150, null=True)),
                ("about_me", models.TextField(blank=True, max_length=200, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("is_staff", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("age", models.PositiveIntegerField(blank=True, null=True)),
                ("weight", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "avg_meal_score",
                    models.FloatField(blank=True, default=5.0, null=True),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        default="O",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("hand_length", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "activity_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Every day",
                                "For those who are highly committed to daily workouts.",
                            ),
                            (
                                "A few times a week",
                                "A very common option for regular exercisers.",
                            ),
                            (
                                "Sometimes",
                                "For those who are active but perhaps not on a strict schedule.",
                            ),
                            ("Rarely", "For those who don't prioritize fitness often."),
                            ("Never", "For those who are not into fitness at all."),
                        ],
                        default="Sometimes",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
